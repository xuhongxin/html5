<canvas id="canvas" width="500" height="500">
Fallback Content:The browser didn't support canvas
</canvas>

<!-- 指定button调用时的方法 -->
<input type="button" value="Button 1" id="btn1"  onclick="drawRect();"/>
<input type="button" value="Button 2" id="btn2"  onclick="draw();"/>
<input type="button" value="Button 3" id="btn3"  onclick="drawCycle();"/>



<script type="text/javascript">
	// 绘制矩形图案	
	 function drawRect(){ 
			 var canvas = document.getElementById('canvas'); 
			 if (canvas.getContext){ 
				 var ctx = canvas.getContext('2d');  // 获取 2D 渲染上下文						
				 ctx.clearRect(0,0,100,100)  ;// 清除以（0,0）为左上坐标原点，300*200 矩形区域内所有像素
				 ctx.fillStyle = '#00f';   // 设置矩形的填充属性，#00f 代表蓝色
				 ctx.strokeStyle = '#f00';  // 设置矩形的线条颜色，#f00 代表红色
				 ctx.fillRect(10,10,50,20); // 使用 fillStyle 填充一个 150*80 大小的矩形
				 ctx.strokeRect(0,0, 100, 100);  // 以 strokeStype 属性为边的颜色绘制一个无填充矩形
		 } 
	 }
	 
	// 绘制封闭的半圆形图案
	 function draw(){
		var canvas = document.getElementById('canvas');
		if(canvas.getContext){
			var ctx = canvas.getContext('2d');
			ctx.beginPath();
			ctx.arc(60,175,30,0,Math.PI,false);
			ctx.closePath();
			ctx.fill();
			ctx.stroke();
		}
	 }
	 
	// 采用旋转/平移绘制位图
	function drawCycle(){
		var canvas = document.getElementById('canvas');
		if(canvas.getContext){
			var ctx = canvas.getContext('2d');
			ctx.translate(150,150);//将原点从(0,0)以至（150,150）
			
			for(i=1;i<=2;i++){ // 绘制内外两层
			
				if(i%2==1){ ctx.fillStyle='#00f'; } // 对这两层分别采用不同的颜色填充
				else{ ctx.fillStyle='#f00'; }
				
				ctx.save(); // 保存状态。
				
				for(j=1;j<=i*6;j++){
					ctx.rotate(Math.PI/(3*i));
					ctx.beginPath();
					ctx.arc(0,20*i,5,0,Math.PI*2,true);
					ctx.fill();
				}
				ctx.restore();
			}
		}
	}
</script>